package messiah.parse.generic;

import messiah.parse.*;
import messiah.NodeInfo;
import usu.NodeId;
import messiah.database.Database;
import java.util.SortedMap;
import java.util.List;
import java.util.ArrayList;

/**
 * This object is in charge of building the node index from node id to node info
 *
 * @author John Truong Ba Quan and Curtis
 */
public class ItemIndexBuilder implements ParserListener {

    private Database db;
    private NodeIdBuilder nodeIdBuilder = null;
    private final PathIndexBuilder pathIndexBuilder;

    public ItemIndexBuilder(Database db, NodeIdBuilder nodeIdBuilder, PathIndexBuilder pathIndexBuilder) {
        this.db = db;
        this.nodeIdBuilder = nodeIdBuilder;
        this.pathIndexBuilder = pathIndexBuilder;
    }

    @Override
    public void startDocument() {
    }

    @Override
    public void endDocument() {
    }

    @Override
    public void start(String str, boolean isAttribute, boolean isValue) {
        if (isAttribute && !isValue) {
            str = '@' + str;
        }
        NodeInfo info = new NodeInfo(pathIndexBuilder.getCurrentPathId(), str, nodeIdBuilder.getLevel());
        //System.out.println("Curt: nodeId " + this.nodeIdBuilder.getNodeId() + " info " + info);
        NodeId nodeId = this.nodeIdBuilder.getNodeId();
        db.itemNodeIndex.put(nodeId, info);
        List<NodeId> historyDLNs = (db.itemToHistoryIndex.containsKey(nodeId))
                ? db.itemToHistoryIndex.get(nodeId) : new ArrayList(3);
        historyDLNs.add(nodeId);
        db.itemToHistoryIndex.put(this.nodeIdBuilder.getNodeId(), historyDLNs);
        db.historyToItemIndex.put(nodeId, nodeId);
    }

    @Override
    public void end(boolean isAttribute, boolean isValue) {
    }

    public static void main(String[] args) {
        Database bdb = new messiah.database.berkeleydb.Database();
        SortedMap<NodeId, NodeInfo> map = bdb.nodeIndex;
        for (NodeId nodeId : map.keySet()) {
            NodeInfo value = map.get(nodeId);
            System.out.println("key = " + nodeId + " --> " + value);
        }

    }
}
